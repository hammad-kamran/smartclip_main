name: Frontend CI

on:
  push:
    branches: [main, develop, 'feature/*', 'hotfix/*']
    paths:
      - 'smartclips-main/src/**'
      - 'smartclips-main/public/**'
      - 'smartclips-main/package.json'
      - 'smartclips-main/package-lock.json'
  pull_request:
    branches: [main, develop]
    paths:
      - 'smartclips-main/src/**'
      - 'smartclips-main/public/**'
      - 'smartclips-main/package.json'
      - 'smartclips-main/package-lock.json'
  workflow_dispatch:

jobs:
  frontend-build-test:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./smartclips-main
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
      
      - name: Verify Project Structure
        run: |
          echo "Current directory: $(pwd)"
          echo "Files in frontend directory:"
          ls -la
          echo "Package.json exists: $(test -f package.json && echo 'Yes' || echo 'No')"
          echo "Src directory exists: $(test -d src && echo 'Yes' || echo 'No')"
      
      - name: Install Dependencies
        run: |
          npm cache clean --force
          npm install
      
      - name: Run Linter
        run: |
          if npm run | grep -q "lint"; then
            npm run lint
          else
            echo "‚ö†Ô∏è No lint script found, skipping linter"
          fi
        continue-on-error: false
      
      - name: Run Tests
        run: |
          if npm run | grep -q "test"; then
            npm test -- --coverage --watchAll=false --passWithNoTests
          else
            echo "‚ö†Ô∏è No test script found, skipping tests"
          fi
        env:
          CI: true
      
      - name: Build Application
        run: |
          if npm run | grep -q "build"; then
            npm run build
          else
            echo "‚ö†Ô∏è No build script found, skipping build"
          fi
        env:
          NODE_ENV: production
          GENERATE_SOURCEMAP: false
      
      - name: Build Size Check
        run: |
          if [ -d "build" ]; then
            echo "üì¶ Build size information:"
            du -sh build/ || echo "Could not determine build size"
            echo "üìÑ Build files:"
            find build/ -name "*.js" -o -name "*.css" | head -10 || echo "No JS/CSS files found"
          fi
      
      - name: Success Notification
        if: success()
        run: echo "‚úÖ Frontend CI completed successfully!"
      
      - name: Failure Notification
        if: failure()
        run: echo "‚ùå Frontend CI failed - check logs above"
